{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Page","URL","useState","markdown","setMarkdown","useEffect","fetch","then","res","text","data","className","children","CTCI_DATA","title","path","joinString","str","split","join","forEach","value","push","App","ctci","i","ctciLinks","map","to","Math","random","ctciRoutes","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAqDA,SAASA,EAAT,GAAsB,IAAPC,EAAM,EAANA,IAAM,EACeC,qBADf,mBACXC,EADW,KACDC,EADC,KAUnB,OARAC,qBAAU,WACRC,MAAML,GACHM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,EAAYM,SAIV,qBAAKC,UAAU,qBAAf,SAAoC,cAAC,IAAD,CAAeC,SAAUT,MAGvE,IAAMU,EAAY,CAChB,CACEC,MAAO,YACPb,IAAK,sEACLc,KAAM,WAYV,SAASC,EAAWC,GAClB,OAAOA,EAAIC,MAAM,KAAKC,KAAK,KAT7B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAIC,SAAQ,SAAAC,GACpCR,EAAUS,KAAK,CACbR,MAAM,6BAAD,OAA+BO,GACpCpB,IAAI,8GAAD,OAAgHoB,EAAhH,OACHN,KAAM,cAQKQ,MA5Ef,WAEE,IADA,IAAMC,EAAO,GACLC,EAAE,EAAGA,EAAE,GAAIA,IACjBD,EAAKF,KAAL,gCAAmCG,IAGrC,IAAMC,EAAYb,EAAUc,KAAI,SAAAjB,GAAI,OAAI,oBAAIC,UAAU,OAAd,SAAyC,cAAC,IAAD,CAAMiB,GAAE,gBAAWZ,EAAWN,EAAKI,QAAnC,SAA8CJ,EAAKI,SAAlEe,KAAKC,aACjEC,EAAalB,EAAUc,KAAI,SAAAjB,GAC/B,OAAQ,cAAC,IAAD,CAAOsB,OAAK,EAACjB,KAAI,gBAAWC,EAAWN,EAAKI,QAA5C,SACN,cAACd,EAAD,CAAMC,IAAKS,EAAKT,WAGpB,OACE,cAAC,IAAD,UACE,qBAAKU,UAAU,MAAf,SACE,iCACE,0BAASA,UAAU,oBAAnB,UACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,2CACA,oBAAIA,UAAU,kBAAd,SACGe,OAIL,qBAAKf,UAAU,UAAf,SACE,oBAAIA,UAAU,iBAAd,4CAIJ,qBAAKA,UAAU,SAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,OAAK,EAACjB,KAAK,IAAlB,SACE,wCAEDgB,eChCAE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.14aad475.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  const ctci = [];\n  for(let i=1; i<16; i++) {\n    ctci.push(`Interview Questions - ${i}`)\n  }\n\n  const ctciLinks = CTCI_DATA.map(data => <li className=\"link\" key={Math.random()}><Link to={`/ctci/${joinString(data.title)}`}>{data.title}</Link></li>);\n  const ctciRoutes = CTCI_DATA.map(data => {\n    return (<Route exact path={`/ctci/${joinString(data.title)}`}>\n      <Page URL={data.URL}/>\n    </Route>);\n  })\n  return (\n    <Router>\n      <div className=\"App\">\n        <main>\n          <section className=\"sidebar-container\">\n            <div className=\"sidebar\">\n              <h2 className=\"sidebar-header\">Cracking the Coding Interview</h2>\n              <ul className=\"links-container\">\n                {ctciLinks}\n              </ul>\n            </div>\n\n            <div className=\"sidebar\">\n              <h2 className=\"sidebar-header\">Automate the Boring Stuff</h2>\n            </div>\n          </section>\n\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <h1>Home</h1>\n              </Route>\n              {ctciRoutes}\n            </Switch>\n          </div>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nfunction Page({URL}) {\n  const [ markdown, setMarkdown ] = useState();\n  useEffect(() => {\n    fetch(URL)\n      .then(res => res.text())\n      .then(data => {\n        setMarkdown(data);\n      })\n  });\n\n  return (<div className=\"markdown-container\"><ReactMarkdown children={markdown}/></div>);\n}\n\nconst CTCI_DATA = [\n  {\n    title: 'VI. Big O',\n    URL: 'https://raw.githubusercontent.com/janeligio/ctci/master/VI-Big_O.md',\n    path: '/ctci/',\n  }\n];\n\n[1,2,3,4,5,6,7,8,10,11,13,15].forEach(value => {\n  CTCI_DATA.push({\n    title: `IX. Interview Questions | ${value}`,\n    URL: `https://raw.githubusercontent.com/janeligio/ctci/master/IX.%20Interview%20Questions/IX-Interview_Questions-${value}.md`,\n    path: '/ctci/'\n  })\n})\n\nfunction joinString(str) {\n  return str.split(' ').join('-');\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}